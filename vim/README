## How to Manage Vim Modules Natively w/ Git

From:
https://shapeshed.com/vim-packages/

### Adding a package

Here is an example of how to add a package using Vimâ€™s native approach to
packages and git submodules.

```
cd ~/dotfiles
git submodule init
git submodule add https://github.com/vim-airline/vim-airline.git vim/pack/shapeshed/start/vim-airline
git add .gitmodules vim/pack/shapeshed/start/vim-airline
git commit
```

### Updating packages

To update packages is also just a case of updating git submodules.

```
git submodule update --remote --merge
git commit
```

### Removing a package

Removing a package is just a case of removing the git submodule.

```
git submodule deinit vim/pack/shapeshed/start/vim-airline
git rm vim/pack/shapeshed/start/vim-airline
rm -Rf .git/modules/vim/pack/shapeshed/start/vim-airline
git commit
```

## Vim Pandoc Autocompletion

`Ctrl-n` in insert mode.
