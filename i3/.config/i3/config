# denten's i3 config file

# *****************************************************************
#                                                         Defaults

set $mod Mod4
font pango: Droid Sans Mono 12
default_orientation vertical
new_window 1pixel
workspace_auto_back_and_forth yes
workspace_layout tabbed

bindsym $mod+Return exec sakura
bindsym $mod+Shift+D exit
bindsym $mod+d exec dmenu_run -fn 'Droid Sans Mono-18'
bindsym $mod+Shift+C reload
bindsym $mod+Shift+R restart

# *****************************************************************
#                                                          Startup

# when running for the first time install arandr
# configure screens and save default.sh to .screenlayout

exec /usr/libexec/gnome-settings-daemon
# exec --no-startup-id synclient TouchPadOff=1
exec --no-startup-id nm-applet
# exec --no-startup-id i3-msg 'workspace 1; exec firefox'
exec --no-startup-id /usr/bin/setxkbmap -option 'ctrl:nocaps'
exec --no-startup-id xgamma -gamma 1
# exec --no-startup-id xscreensaver -no-splash
# exec --no-startup-id recollindex
# exec --no-startup-id /home/denten/bin/sys-admin/startup.sh
exec --no-startup-id xinput --set-prop 12 'libinput Accel Speed' 0
exec --no-startup-id xinput --set-prop "SynPS/2 Synaptics TouchPad" "Device Enabled" 0

#disable middle mouse button
exec --no-startup-id xinput set-button-map 12 1 0 3 4 5 6 7

exec --no-startup-id powertop --auto-tune
workspace 1 output eDP1
workspace 2 output DP2

exec xmodmap ~/.xmodmap

# get auth work with polkit-gnome
# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# if enabled you should comment welcome app.
# https://github.com/jceb/dex
# exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
# exec --no-startup-id dex --autostart --environment i3

# start welcome app
# exec --no-startup-id sh /usr/share/endeavouros/scripts/welcome --startdelay=3 

# num lock activated
# exec --no-startup-id numlockx on

# configure multiple keyboard layouts and hotkey to switch (Alt+CAPSLOCK in this example)
# exec --no-startup-id setxkbmap -layout 'us,sk' -variant altgr-intl,qwerty -option 'grp:alt_caps_toggle'

# start conky:
#exec_always --no-startup-id conky

# start a script to setup displays
# uncomment the next line, use arandr to setup displays and save the file as monitor:
exec --no-startup-id ~/.screenlayout/default.sh

# set wallpaper
# exec --no-startup-id sleep 2 && nitrogen --restore
exec --no-startup-id sleep 1 && feh --bg-fill /usr/share/endeavouros/backgrounds/endeavouros-wallpaper.png

# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# disable power saving (for example if using xscreensaver)
#exec --no-startup-id xset -dpms

# use xautolock to use autosuspend rules for mobile devices
# https://wiki.archlinux.org/title/Session_lock#xautolock
#exec --no-startup-id xautolock -time 60 -locker "systemctl suspend"

# xscreensaver
# https://www.jwz.org/xscreensaver
#exec --no-startup-id xscreensaver --no-splash

# Desktop notifications
# dunst config used ~/.config/dunst/dunstrc
# set alternative config if needed:
# exec --no-startup-id /usr/bin/dunst --config ~/.config/dunst/dunstrc
# may yneed to run dbus-launch explicitly: 
#exec --no-startup-id dbus-launch /usr/bin/dunst
exec --no-startup-id /usr/bin/dunst
# alternative if you installed aside with XFCE4:
# exec --no-startup-id /usr/lib/xfce4/notifyd/xfce4-notifyd &

# autotiling script
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling ;) (it is in AUR)
#exec_always --no-startup-id autotiling

# Autostart apps as you like
# exec --no-startup-id sleep 2 && xfce4-terminal
# exec --no-startup-id sleep 7 && firefox
# exec --no-startup-id sleep 7 && google-chrome-stable
# exec --no-startup-id sleep 3 && thunar


# *****************************************************************
#                                                          Windows

# Threshold max window size, depends on your display size
floating_maximum_size 1440 x 810

# Tell every window to behave centered
for_window [class=".*"] move absolute position center

bindsym $mod+x kill
floating_modifier $mod

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+c move absolute position center

bindsym $mod+Shift+H move left
bindsym $mod+Shift+J move down
bindsym $mod+Shift+K move up
bindsym $mod+Shift+L move right

bindsym $mod+backslash split h
bindsym $mod+minus split v

# enter fullscreen mode for the focused container
bindsym $mod+Shift+F fullscreen

# change container layout (stacked, tabbed, default)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+n layout default
bindsym $mod+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# set border shortcuts
bindsym $mod+Shift+b border normal
bindsym $mod+b border 1pixel

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing h,j,k,l to shrink/gro width/height.
        bindsym l resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym h resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


# *****************************************************************
#                                                       Workspaces

# switch to workspace
bindsym $mod+1 workspace  1
bindsym $mod+2 workspace  2
bindsym $mod+3 workspace  3
bindsym $mod+4 workspace  4
bindsym $mod+5 workspace  5
bindsym $mod+6 workspace  6
bindsym $mod+7 workspace  7
bindsym $mod+8 workspace  8
bindsym $mod+9 workspace  9
bindsym $mod+0 workspace  10

# move focused container to workspace
bindsym $mod+Shift+exclam move container to workspace 1
bindsym $mod+Shift+at move container to workspace 2
bindsym $mod+Shift+numbersign move container to workspace 3
bindsym $mod+Shift+dollar move container to workspace 4
bindsym $mod+Shift+percent move container to workspace 5
bindsym $mod+Shift+asciicircum move container to workspace 6
bindsym $mod+Shift+ampersand move container to workspace 7
bindsym $mod+Shift+asterisk move container to workspace 8
bindsym $mod+Shift+parenleft move container to workspace 9
bindsym $mod+Shift+parenright move container to workspace 10

# Move the current workspace to the next output
bindsym $mod+comma move container to output left
bindsym $mod+period move container to output right
bindsym $mod+Shift+greater move workspace to output right
bindsym $mod+Shift+less move workspace to output left

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# set $ws1 "  "
# set $ws2 "  "
# set $ws3 "  "
# set $ws4 "  "
# set $ws5 "  "
# set $ws6 "6"
# set $ws7 "7"
# set $ws8 "8"
# set $ws9 "9"
# set $ws10 "10"

# bind program to workspace and focus to them on startup:
# assign [class="google-chrome-stable"] 1
# assign [class="(?i)firefox"] 1
# assign [class="sakura"] 2

# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
#workspace $ws1 output VGA-0
#workspace $ws2 output VGA-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# automatic set focus new window if it opens on another workspace than the current:
# for_window [class=sakura] focus
# for_window [class=(?i)firefox] focus

# *****************************************************************
# Forces

# use `xprop` to find out the name of the window
for_window [title="^screenkey"] floating enable
for_window [title="^MPlayer"] floating enable
for_window [class="MPlayer"] floating enable

# *****************************************************************
# Bar

 bar {
          status_command i3status-rs
	  status_command i3blocks -c ~/.config/i3/i3blocks.conf
          tray_output primary
	  font pango: Noto Sans Regular 14
 }

# bar {
#     font pango:DejaVu Sans Mono, FontAwesome 22
#     position bottom
#     status_command i3status-rs ~/.config/i3/config.toml
# }



# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
#bar {
#		font pango: Noto Sans Regular 16
#		status_command i3blocks -c ~/.config/i3/i3blocks.conf
#	    	position bottom
#	    	i3bar_command i3bar --transparency
# it could be that you have no primary display set: set one (xrandr --output <output> --primary)
# reference: https://i3wm.org/docs/userguide.html#_tray_output
		    #tray_output primary
#		    tray_padding 0



# ****************************************************************************
# Thinkpad x1-10th gen

# launch 'xev' from terminal to see what the X-server returns when you press the key
# xmodmap -pke | less to see available binds

#bindsym XF86MonBrightnessUp exec "brightnessctl set +5%; notify-send 'Brightness (Up)' $(brightnessctl g)'%'"
#bindsym XF86MonBrightnessDown exec "brightnessctl set 5%-; notify-send 'Brightness (Up)' $(brightnessctl g)'%'"

bindsym XF86MonBrightnessUp exec "light -A 10; notify-send 'Brightness (Up)' $(light)'%'"
bindsym XF86MonBrightnessDown exec "light -U 10; notify-send 'Brightness (Down)' $(light)'%'"

# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

bindsym XF86AudioLowerVolume exec amixer sset 'Master' 5%-
bindsym XF86AudioRaiseVolume exec amixer sset 'Master' 5%+

bindsym XF86AudioMute exec amixer sset 'Master' toggle
bindsym XF86AudioMicMute exec amixer sset Capture toggle

bindsym XF86Display exec "arandr"
bindsym XF86AudioNext exec ~/.screenlayout/double.sh
bindsym XF86AudioPlay exec ~/.screenlayout/single.sh
bindsym XF86AudioPrev exec ~/.screenlayout/mirror.sh

bindsym Print exec xfce4-screenshooter

bindsym XF86WakeUp exec s2both
bindsym XF86ScreenSaver exec "xscreensaver-command -lock"


# ****************************************************************************
#                                                                Rofi
##
# Power Profiles menu switcher (rofi)
bindsym $mod+Shift+p exec ~/.config/i3/scripts/power-profiles

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)

# bindsym $mod+d exec rofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

# bindsym F9 exec rofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+t /F10 optional disabled)

# bindsym $mod+t exec rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

# bindsym F10 exec rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)

# exec --no-startup-id greenclip daemon>/dev/null
# bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard \
#		-config ~/.config/rofi/rofidmenu.rasi


# ****************************************************************************
#                                                                Autostart

